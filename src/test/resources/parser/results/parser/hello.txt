program
    stmts
        stmt:itemStmt
            item:fnItem
                'fn': fn
                IDENT: hello
                '(': (
                ')': )
                block
                    '{': {
                    stmts
                        stmt:assignStmt
                            pattern
                                simplePattern:pathPattern
                                    path
                                        IDENT: message
                            '=': =
                            expr:literalExpr
                                literal
                                    STRING_LIT: "Hello World!"
                        ';': ;
                        stmt:exprStmt
                            expr:fnCallExpr
                                expr:memAccExpr
                                    expr:pathExpr
                                        path
                                            IDENT: IO
                                    '.': .
                                    IDENT: println
                                '(': (
                                fnCallArgs
                                    expr:literalExpr
                                        literal
                                            STRING_LIT: "Hello World!"
                                ')': )
                    '}': }
    EOF: <EOF>
