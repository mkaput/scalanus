program
    stmts
        ';': ;
        ';': ;
        ';': ;
        stmt:exprStmt
            expr:subExpr
                expr:addExpr
                    expr:pathExpr
                        path
                            IDENT: x
                    '+': +
                    expr:pathExpr
                        path
                            IDENT: y
                '-': -
                expr:pathExpr
                    path
                        IDENT: z
        ';': ;
        stmt:exprStmt
            expr:mulExpr
                expr:parenExpr
                    '(': (
                    expr:addExpr
                        expr:pathExpr
                            path
                                IDENT: x
                        '+': +
                        expr:pathExpr
                            path
                                IDENT: y
                    ')': )
                '*': *
                expr:pathExpr
                    path
                        IDENT: z
        ';': ;
        ';': ;
        ';': ;
        ';': ;
        stmt:exprStmt
            expr:subExpr
                expr:addExpr
                    expr:pathExpr
                        path
                            IDENT: x
                    '+': +
                    expr:pathExpr
                        path
                            IDENT: y
                '-': -
                expr:mulExpr
                    expr:fnCallExpr
                        expr:pathExpr
                            path
                                IDENT: z
                        '(': (
                        fnCallArgs
                            expr:addExpr
                                expr:pathExpr
                                    path
                                        IDENT: x
                                '+': +
                                expr:pathExpr
                                    path
                                        IDENT: y
                        ')': )
                    '*': *
                    expr:pathExpr
                        path
                            IDENT: z
        ';': ;
        ';': ;
        ';': ;
        ';': ;
    EOF: <EOF>
